{"ast":null,"code":"import { toasterConstants } from \"./constants\";\nconst intialToasters = {\n  toasters: []\n};\nexport const toasterReducer = (state = intialToasters, action) => {\n  switch (action.type) {\n    case toasterConstants.SHOW_TOASTER:\n      return {\n        toasters: [...state.toasters, action.payload]\n      };\n    case toasterConstants.REMOVE_TOASTER:\n      return {\n        toasters: state.toasters.filter(toaster => toaster.id !== action.payload.id)\n      };\n    default:\n      return state;\n  }\n};","map":{"version":3,"names":["toasterConstants","intialToasters","toasters","toasterReducer","state","action","type","SHOW_TOASTER","payload","REMOVE_TOASTER","filter","toaster","id"],"sources":["/Users/dilipjoshi/Desktop/learning/Swad/swad-client/src/Config/reducers.ts"],"sourcesContent":["import { Toaster } from \"./main.types\";\nimport { Action } from \"./main.types\";\nimport { toasterConstants } from \"./constants\";\n\n\nconst intialToasters = {\n  toasters:[]\n}\n\nexport const toasterReducer = (state=intialToasters, action:Action) => {\n  switch( action.type ){\n    case toasterConstants.SHOW_TOASTER:\n      return({\n        toasters: [...state.toasters, action.payload]\n      })\n    case toasterConstants.REMOVE_TOASTER:\n      return({\n        toasters: state.toasters.filter((toaster:Toaster) => toaster.id !== action.payload.id )\n      })\n    default:\n      return state;\n  }\n\n} "],"mappings":"AAEA,SAASA,gBAAgB,QAAQ,aAAa;AAG9C,MAAMC,cAAc,GAAG;EACrBC,QAAQ,EAAC;AACX,CAAC;AAED,OAAO,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAACH,cAAc,EAAEI,MAAa,KAAK;EACrE,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKN,gBAAgB,CAACO,YAAY;MAChC,OAAO;QACLL,QAAQ,EAAE,CAAC,GAAGE,KAAK,CAACF,QAAQ,EAAEG,MAAM,CAACG,OAAO;MAC9C,CAAC;IACH,KAAKR,gBAAgB,CAACS,cAAc;MAClC,OAAO;QACLP,QAAQ,EAAEE,KAAK,CAACF,QAAQ,CAACQ,MAAM,CAAEC,OAAe,IAAKA,OAAO,CAACC,EAAE,KAAKP,MAAM,CAACG,OAAO,CAACI,EAAG;MACxF,CAAC;IACH;MACE,OAAOR,KAAK;EAChB;AAEF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}