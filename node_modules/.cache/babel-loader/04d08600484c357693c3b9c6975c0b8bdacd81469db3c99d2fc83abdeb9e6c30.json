{"ast":null,"code":"var _jsxFileName = \"/Users/dilipjoshi/Desktop/learning/Swad/swad-client/src/Components/Toaster/index.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport FlashMessage from './FlashMessage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Toasters = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [toasters, setToasters] = useState([]);\n  const toastersInRedux = useSelector(store => store.toasters);\n\n  // useEffect(()=>{\n  //   let newToasters = difference(toastersInRedux, toasters)\n  //   if(newToasters.length)\n  //     newToasters.forEach((toast:Toaster):any => setTimeout(():any=> dispatch(removeToaster({id: toast.id})), toast.timeout))\n  //   setToasters(toastersInRedux);\n  // },[toastersInRedux]);\n\n  // const onRemoveToast = (event, toasterId) => {\n  //   event.preventDefault();\n  //   dispatch(removeToaster(toasterId));\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: toasters ? toasters.map(toast => /*#__PURE__*/_jsxDEV(FlashMessage, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 35\n    }, this)) : null\n  }, void 0, false);\n};\n_s(Toasters, \"0EPQ+gB+RxfQuZUlXPi0SKQT0Ck=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Toasters;\nexport default Toasters;\nvar _c;\n$RefreshReg$(_c, \"Toasters\");","map":{"version":3,"names":["React","useState","useSelector","useDispatch","FlashMessage","jsxDEV","_jsxDEV","Fragment","_Fragment","Toasters","_s","dispatch","toasters","setToasters","toastersInRedux","store","children","map","toast","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dilipjoshi/Desktop/learning/Swad/swad-client/src/Components/Toaster/index.tsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport FlashMessage from './FlashMessage';\nimport { difference } from '../../Config/service';\nimport { Toaster } from '../../Config/main.types';\nimport { removeToaster } from '../../Config/actions';\n\n\n\nconst Toasters = () => {\n\n  const dispatch = useDispatch();\n  const [ toasters, setToasters ] = useState([]);\n  const toastersInRedux = useSelector((store:any) => store.toasters);\n  \n\n  // useEffect(()=>{\n  //   let newToasters = difference(toastersInRedux, toasters)\n  //   if(newToasters.length)\n  //     newToasters.forEach((toast:Toaster):any => setTimeout(():any=> dispatch(removeToaster({id: toast.id})), toast.timeout))\n  //   setToasters(toastersInRedux);\n  // },[toastersInRedux]);\n\n  // const onRemoveToast = (event, toasterId) => {\n  //   event.preventDefault();\n  //   dispatch(removeToaster(toasterId));\n  // }\n\n  return (\n    <>\n      {\n        toasters ?\n          toasters.map((toast) => <FlashMessage />) : null\n      }\n    </>\n  );\n}\nexport default Toasters;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAmB,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAO1C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAErB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAM,CAAES,QAAQ,EAAEC,WAAW,CAAE,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMa,eAAe,GAAGZ,WAAW,CAAEa,KAAS,IAAKA,KAAK,CAACH,QAAQ,CAAC;;EAGlE;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA,oBACEN,OAAA,CAAAE,SAAA;IAAAQ,QAAA,EAEIJ,QAAQ,GACNA,QAAQ,CAACK,GAAG,CAAEC,KAAK,iBAAKZ,OAAA,CAACF,YAAY;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,CAAC,GAAG;EAAI,gBAEpD,CAAC;AAEP,CAAC;AAAAZ,EAAA,CA3BKD,QAAQ;EAAA,QAEKN,WAAW,EAEJD,WAAW;AAAA;AAAAqB,EAAA,GAJ/Bd,QAAQ;AA4Bd,eAAeA,QAAQ;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}